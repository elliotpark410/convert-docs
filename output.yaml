openapi: 3.0.0
info:
  title: Demo 3 June
  version: 1.0.0
servers:
  - url: http://{{base_url}}
paths:
  /pool/setup:
    post:
      tags:
        - General
      summary: Add cFund Pool
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: kfund
                display: Kimchi Fund
                description: >-
                  The fund in this pool will be used for bitcoin arbitrage in
                  Korea. This leverage price difference between BTC in Korea and
                  the rest of the world due to Korea's strict capital outflow
                  policy.
                type: 0
                risk_class: 8
                risk_description: >-
                  This pool is risky. Primary risk comes from operation stategy
                  we employed. Fund might stuck in Korea without a way get out.
                expected_annual_return: 50000
                is_private: true
                program_id: 6ZzZPUQg2Dik4bHZi8xRxcFcLjXAAh1zVUhEojVKpCK5
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{JAGAD_AUTH}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pools:
    get:
      tags:
        - General
      summary: Get list of pools
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{DEFAULT_AUTH}}
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: sort_by
          in: query
          schema:
            type: string
          example: expected_annual_return
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pool/stake:
    post:
      tags:
        - General
      summary: Bob stake 750 to kFund
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                pool_uuid: '{{KFUND_UUID}}'
                ui_amount: 750
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{BOB_AUTH}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /poolbalance:
    get:
      tags:
        - General
      summary: Get Pool Balance
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pool/unstake:
    post:
      tags:
        - General
      summary: Bob wants to unstake 250 from kfund
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                pool_uuid: '{{KFUND_UUID}}'
                ui_amount: 250
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{BOB_AUTH}}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pool/unstake/my:
    get:
      tags:
        - General
      summary: Bob check unstake request status
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{BOB_AUTH}}
        - name: sort_by
          in: query
          schema:
            type: string
          example: '-created_at'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pool/unstake/request:
    post:
      tags:
        - General
      summary: Admin approves Bob 150
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                pool_uuid: '{{KFUND_UUID}}'
                queue_uuid: 70e26ea7-edc7-4e4e-a2ac-ccf23e1a9cc8
                action: approve
      parameters:
        - name: ''
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pool/disburse:
    post:
      tags:
        - General
      summary: Admin disburse to investee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                pool_uuid: '{{MMI_UUID}}'
                wallet: 8GmHzaNXivwa66AutXbDPNoQoTwniBHLFPSZ18mDWWHy
                ui_amount: 150
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pool/revenue/stage:
    post:
      tags:
        - General
      summary: Revenue sharing - stage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                pool_uuid: '{{MMI_UUID}}'
                start: '2022-08-02'
                end: '2022-08-31'
                amount: 50000000000
                direction: OUTFLOW
                source: cc76f7d4-8e53-4396-9d13-bd6a0f366aa7
                redisburse: false
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pool/revenues:
    get:
      tags:
        - General
      summary: Revenue sharing - list
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{JAGAD_AUTH}}
        - name: status
          in: query
          schema:
            type: string
          example: STAGED
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pool/revenue/{REV_SHARE_UUID}:
    get:
      tags:
        - General
      summary: Revenue sharing - detail
      parameters:
        - name: REV_SHARE_UUID
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pool/revenue/{REV_SHARE_UUID}/receivers:
    get:
      tags:
        - General
      summary: Revenue sharing - receivers
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: REV_SHARE_UUID
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pool/revenue/commit:
    post:
      tags:
        - General
      summary: Revenue sharing - commit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                uuid: '{{REV_SHARE_UUID}}'
                pool_uuid: '{{MMI_UUID}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
