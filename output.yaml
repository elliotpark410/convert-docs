openapi: 3.0.0
info:
  title: v2
  version: 1.0.0
servers:
  - url: http://{{url}}
tags:
  - name: Admin
  - name: Admin > Authentication
    description: >-
      This auth API is primarily for Garuda admin. Admin is required to do
      several jobs:

      1. Withdraw request

      2. Mint / burn


      Todo based on latest discussion:

      1. Use email instead of phone number.

      2. Send OTP through email instead, because of 3 reasons:

      a. Jasinita takes a long time to integrate (bureaucracy).

      b. We may be blocked by Telkomsel down the road.

      c. More expensive to send an SMS than email.
  - name: Admin > Wallet
  - name: Programmatic
paths:
  /auth/login-without-otp:
    post:
      tags:
        - Admin > Authentication
      summary: Login without OTP
      description: >-
        Authenticates the user and requests a pair of access and refresh tokens.
        Access token expires in 15 minutes. Refresh token expires in 7 days.
        Tokens should be removed from browser's store on window close or on
        application close.


        #### Parameters


        | Parameter | Required | Type | Value | Description |

        | --- | --- | --- | --- | --- |

        | phone_number | true | string | +62818151010 | Telephone number |

        | password | true | string | my_secret_pass | SHA256 hashed password. |
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                phone_number: '081318510162'
                password: my_secret_pass
      parameters:
        - name: x-mock-match-request-body
          in: header
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token_type: Bearer
                expires_in: 900
                access_token: <access token>
                refresh_token: <refresh token>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                statusCode: 400
                error:
                  message: User credentials were incorrect.
                name: BadRequest
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                statusCode: 403
                error:
                  message: >-
                    You are logging in from unknown IP address. Please try to
                    login with OTP to gain access.
                name: OTPRequired
  /auth/login-with-otp:
    post:
      tags:
        - Admin > Authentication
      summary: Login with OTP
      description: >-
        In a case where user can't login without OTP (e.g. because of suspicious
        IP address), user will be told to login with OTP. To login with with
        OTP, user must first hit endpoint `auth/request-otp`. After getting OTP,
        user will submit that OTP alongside his / her credential (phone_number
        and password).


        If OTP is accepted, this endpoint authenticates the user and requests a
        pair of access and refresh tokens. Access token expires in 15 minutes.
        Refresh token expires in 7 days. Tokens should be removed from browser's
        store on window close.


        #### Parameters


        | Parameter | Required | Type | Value | Description |

        | --- | --- | --- | --- | --- |

        | phone_number | true | string | +62818151010 | Telephone number |

        | password | true | string | my_secret_pass | SHA256 hashed password. |

        | otp_token | false | string | 658388 | TOTP of the shared secret if OTP
        is activated |
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                phone_number: '081318510161'
                password: my_secret_pass
                otp_token: '658388'
      parameters:
        - name: x-mock-match-request-body
          in: header
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token_type: Bearer
                expires_in: 900
                access_token: <access token>
                refresh_token: <refresh token>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: login with OTP error - credential incorrect
                  value:
                    statusCode: 400
                    error:
                      message: User credentials were incorrect.
                    name: BadRequest
                example-1:
                  summary: login with OTP error - otp incorrect
                  value:
                    statusCode: 400
                    error:
                      message: OTP is incorrect. Please try again.
                    name: BadRequest
  /auth/refresh:
    post:
      tags:
        - Admin > Authentication
      summary: Refresh
      description: Request new access token with refresh token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refresh_token: R3AJzxl81xrIZQSLPODp
      parameters:
        - name: x-mock-match-request-body
          in: header
          schema:
            type: boolean
          example: 'true'
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer <access_token>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                token_type: Bearer
                expires_in: 900
                access_token: <access token>
                refresh_token: <refresh token>
                is_otp_activated: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                statusCode: 400
                error:
                  message: Refresh token is not valid.
                name: BadRequest
  /auth/request-otp:
    post:
      tags:
        - Admin > Authentication
      summary: Request OTP
      description: >-
        Request an OTP for a specified phone number. Implement rate-limiting API
        on this endpoint. Maximum 1 time per minute, with total 5 times per 3
        hours.


        In response, `request_time` is unix timestamp marking when the OTP
        request is made. `count` is the number of times OTP has been requested
        in the past 3 hours. `max_count` is the request limit for 3-hour period.


        If the requested phone number is unknown, server will still return as if
        phone number is valid. This is to prevent attacker brute forcing our API
        to gain list of registered user.


        #### Parameters


        | Parameter | Required | Type | Value | Description |

        | --- | --- | --- | --- | --- |

        | phone_number | true | string | +62818151010 | Telephone number |
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                phone_number: '081318510160'
      parameters:
        - name: x-mock-match-request-body
          in: header
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                request_time: 1655948417
                count: 3
                max_count: 5
                message: Token has been sent to requesting phone number.
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                statusCode: 403
                error:
                  message: >-
                    Max OTP request limit exceeded. Please wait before making
                    another request.
                name: Forbidden
  /auth/challenge-otp:
    post:
      tags:
        - Admin > Authentication
      summary: Challenge OTP
      description: >-
        #### Parameters


        | Parameter | Required | Type | Value | Description |

        | --- | --- | --- | --- | --- |

        | otp_token | true | string | 556038 | One time passcode/ 2-Factor
        Authentication token |
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                otp_token: '123456'
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer <access_token>
        - name: x-mock-match-request-body
          in: header
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: OTP accepted.
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                statusCode: 403
                error:
                  message: OTP failed to match.
                name: Forbidden
  /wallet/supported-currencies:
    get:
      tags:
        - Admin > Wallet
      summary: Get supported currencies (to Bitwyre)
      description: >-
        When user wants to top up from other cryptocurrencies, first user needs
        to pull a list of supported currencies.


        We support most popular ones, but not all. This feature doesn't provide
        blanket-support of every cryptocurrency.


        This endpoint returns a json. The key is the supported currency, the
        value is the conversion value before transaction fee.
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer <access_token>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - asset: btc
                  btc_equivalent: '1'
                  icon_url: https://storage.bitwyre.com/assets/btc.png
                  is_deposit_enabled: true
                  is_trading_enabled: true
                  is_withdraw_enabled: true
                  local_equivalent: ''
                  local_reference: ''
                  max_withdrawal: '10'
                  min_withdrawal: '0.001'
                  name: Bitcoin
                  precision: '1e-8'
                  withdrawal_fee: '0.00000001'
                - asset: eth
                  btc_equivalent: ''
                  icon_url: >-
                    https://storage.bitwyre.com/public/images/coins/raster/ETH_500px.png
                  is_deposit_enabled: true
                  is_trading_enabled: true
                  is_withdraw_enabled: true
                  local_equivalent: ''
                  local_reference: ''
                  max_withdrawal: '10'
                  min_withdrawal: '0.001'
                  name: Ethereum
                  precision: '1e-9'
                  withdrawal_fee: '0.00000001'
                - asset: xmr
                  btc_equivalent: ''
                  icon_url: >-
                    https://storage.bitwyre.com/public/images/coins/raster/XMR_500px.png
                  is_deposit_enabled: true
                  is_trading_enabled: true
                  is_withdraw_enabled: true
                  local_equivalent: ''
                  local_reference: ''
                  max_withdrawal: '10'
                  min_withdrawal: '0.001'
                  name: Monero
                  precision: '1e-12'
                  withdrawal_fee: '0.00000001'
                - asset: zec
                  btc_equivalent: ''
                  icon_url: >-
                    https://storage.bitwyre.com/public/images/coins/raster/ZEC_500px.png
                  is_deposit_enabled: true
                  is_trading_enabled: true
                  is_withdraw_enabled: true
                  local_equivalent: ''
                  local_reference: ''
                  max_withdrawal: '10'
                  min_withdrawal: '0.001'
                  name: ZCash
                  precision: '1e-8'
                  withdrawal_fee: '0.00000001'
                - asset: usdt
                  btc_equivalent: ''
                  icon_url: https://storage.bitwyre.com/assets/usdt.png
                  is_deposit_enabled: true
                  is_trading_enabled: true
                  is_withdraw_enabled: true
                  local_equivalent: ''
                  local_reference: ''
                  max_withdrawal: ''
                  min_withdrawal: '20000'
                  name: USD Tether Stablecoin
                  precision: '1e-6'
                  withdrawal_fee: '10000'
                - asset: idr
                  btc_equivalent: ''
                  icon_url: >-
                    https://storage.bitwyre.com/public/images/coins/raster/IDR.png
                  is_deposit_enabled: true
                  is_trading_enabled: true
                  is_withdraw_enabled: true
                  local_equivalent: ''
                  local_reference: ''
                  max_withdrawal: '100000000'
                  min_withdrawal: '100000'
                  name: Indonesian Rupiah
                  precision: '1'
                  withdrawal_fee: '0'
                - asset: usd
                  btc_equivalent: ''
                  icon_url: https://storage.bitwyre.com/assets/usd.png
                  is_deposit_enabled: true
                  is_trading_enabled: true
                  is_withdraw_enabled: true
                  local_equivalent: ''
                  local_reference: ''
                  max_withdrawal: ''
                  min_withdrawal: '20000'
                  name: United States Dollar
                  precision: '1e-2'
                  withdrawal_fee: '10000'
                - asset: brl
                  btc_equivalent: ''
                  icon_url: >-
                    https://storage.bitwyre.com/public/images/fiats/raster/brl.png
                  is_deposit_enabled: true
                  is_trading_enabled: true
                  is_withdraw_enabled: true
                  local_equivalent: ''
                  local_reference: ''
                  max_withdrawal: ''
                  min_withdrawal: '20000'
                  name: Brazilian Real
                  precision: '1e-2'
                  withdrawal_fee: '10000'
                - asset: mxn
                  btc_equivalent: ''
                  icon_url: >-
                    https://storage.bitwyre.com/public/images/fiats/raster/mxn.png
                  is_deposit_enabled: true
                  is_trading_enabled: true
                  is_withdraw_enabled: true
                  local_equivalent: ''
                  local_reference: ''
                  max_withdrawal: ''
                  min_withdrawal: '20000'
                  name: Mexican Peso
                  precision: '1e-2'
                  withdrawal_fee: '10000'
  /wallet/crypto-address:
    get:
      tags:
        - Admin > Wallet
      summary: Get crypto address (to Bitwyre)
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer <access_token>
        - name: currency
          in: query
          schema:
            type: string
          example: xlm
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Get crypto address - Success
                  value:
                    address: GDRL4HRBJDRHDIJCKX6FB5UNB4KAQINZAJR7L6R3UFKM45BT5KKJ7NCI
                    address_tag: '3267106239'
                    address_tag_name: Memo
                    network: xlm
                example-1:
                  summary: Get crypto address - Success Copy
                  value:
                    address: 8GmHzaNXivwa66AutXbDPNoQoTwniBHLFPSZ18mDWWHy
                    address_tag: '3267106239'
                    address_tag_name: Memo
                    network: sol
                example-2:
                  summary: Get crypto address - Failed Network Timed Out
                  value:
                    statusCode: 500
                    error:
                      message: Blockchain RPC Timed out.
                    name: InternalServerError
  /wallet/va:
    get:
      tags:
        - Admin > Wallet
      summary: Get virtual account (to Bitwyre)
      description: >-
        This endpoint get virtual account number for requesting user.


        Each user will have their own virtual account number to transfer fiat
        money.
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer <access_token>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: Get virtual account - Success
                  value:
                    va_number: '08887081808253023'
                    bank: BCA
                example-1:
                  summary: Get virtual account - Failed
                  value:
                    statusCode: 500
                    error:
                      message: Virtual account backend timed out.
                    name: InternalServerError
  /profile/banking:
    get:
      tags:
        - Admin > Wallet
      summary: Get banking detail (to Bitwyre)
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer <access_token>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                bank_name: BCA
                bank_account: '2440209899'
                bank_account_name: Elbert Ludica Toha
                swift_code: '123456'
                address: 23 Embarcadero Road, California, USA
                details: routing code XXXXX
                account_nickname: Elbert Toha
                asset: idr
    post:
      tags:
        - Admin > Wallet
      summary: Set banking detail (to Bitwyre)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                bank_name: BCA
                bank_account: '2440209899'
                bank_account_name: Elbert Ludica Toha
                swift_code: '123456'
                address: 23 Embarcadero Road, California, USA
                details: routing code XXXXX
                account_nickname: Elbert Toha
                asset: idr
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer <access_token>
        - name: x-mock-match-request-body
          in: header
          schema:
            type: boolean
          example: 'true'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: 1
                bank_name: BCA
                bank_account: '2440209899'
                bank_account_name: Elbert Ludica Toha
                swift_code: '123456'
                address: 23 Embarcadero Road, California, USA
                details: routing code XXXXX
                account_nickname: Elbert Toha
                asset: idr
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                statusCode: 400
                error:
                  message: Field 'bank_account' is missing.
                name: BadRequest
  /wallet/whitelist-address:
    get:
      tags:
        - Admin > Wallet
      summary: Get Whitelist Address for Crypto Asset (to Bitwyre)
      parameters:
        - name: asset
          in: query
          schema:
            type: string
          example: btc
        - name: network_id
          in: query
          schema:
            type: string
          example: btc
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Admin > Wallet
      summary: Add/Whitelist Address (to Bitwyre)
      requestBody:
        content: {}
      parameters:
        - name: asset
          in: query
          schema:
            type: string
          example: btc
        - name: network_id
          in: query
          schema:
            type: string
          example: btc
        - name: address
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /wallet/redeem:
    post:
      tags:
        - Admin > Wallet
      summary: Request redeem
      description: >-
        When user want to redeem their GIDR back to rupiah, they send a request
        to centralized server.


        Along with that, they also send the GIDR to specified address.


        Admin will transfer the Rp to the user.


        If redemption is not possible, admin mark in admin page that redeem
        request is rejected. Then, the backend will need to automatically send
        the GIDR back to user.
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /wallet/convert/callback:
    post:
      tags:
        - Programmatic
      summary: Deposit - Callback
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /wallet/va-in:
    post:
      tags:
        - Programmatic
      summary: Virtual Account - Callback
      description: >-
        This endpoint is to be called when there's money incoming in the virtual
        account.


        Request body follow the provider. For example, Stripe will have
        different format compared to other providers.


        Backend handler must be able to handle supported provider.


        This endpoint transfer GIDR to the associated user. If called
        successfully, will return `204 No Content`.
      requestBody:
        content: {}
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: ApiKey <api_key_access>
        - name: provider
          in: query
          schema:
            type: string
          example: stripe
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
